#!/bin/bash

# if a dir name or synclistelement has spaces. so instead of for loop you have to use a while loop
sync_list_element=(${sync_list})
sync_list_element_number=${#sync_list_element[@]}
bb="0"

while [[ "${sync_list_element_number}" -gt "${bb}" ]]
do	if [[ ! "${mode_transfer}"  == "zfs" ]]; then
		if [[ -n "${elem_server_source}" ]]; then
			probe_sync_name_elements=$(ssh ${ssh_source} "find \"${path_root_source}\"\"${path_offset_source}\"/${sync_list_element[bb]}* -maxdepth 0"); else
			probe_sync_name_elements=$(find "${path_root_source}""${path_offset_source}"/${sync_list_element[bb]}* -maxdepth 0)
		fi

		if [[ "${mode_transfer}"  == "btrfs" ]]; then
			for probe_sync_name_element in ${probe_sync_name_elements}
			do	if [[ -n "${elem_server_source}" ]]; then
					probe=$(ssh ${ssh_source} "btrfs subvolume show \"${probe_sync_name_element}\" 2> /dev/null" | head -1 | awk '{ print $1 }'); else
					probe=$(btrfs subvolume show "${probe_sync_name_element}" 2> /dev/null | head -1 | awk '{ print $1 }')
				fi

				if [[ -n "${probe}" ]]; then
					sync_name+=${probe_sync_name_element}$'\n'
				fi
			done; else

			sync_name+=${probe_sync_name_elements}$'\n'
		fi;

	elif [[ "${mode_transfer}"  == "zfs" ]]; then
		if [[ -n "${elem_server_source}" ]]; then
			probe_sync_name_elements=$(ssh ${ssh_source} "zfs list -Ho name -r \"${path_snap_source}\"" | grep ${path_snap_source}/${sync_list_element[bb]}); else
			probe_sync_name_elements=$(zfs list -Ho name -r "${path_snap_source}" | grep ${path_snap_source}/${sync_list_element[bb]})
		fi
		sync_name+=${probe_sync_name_elements}$'\n'; else
		:
	fi
	# control variable
	bb=$((${bb} + 1))
done

sync_name=$(echo "${sync_name}" | grep -v '^$' | rev | cut -d "/" -f -1 | rev)
echo "${sync_name}"

##### variable list. these will be picked up by debug #####
# import_fields = mode_transfer elem_server_source ssh_source sync_list path_root_source path_snap_source
# export_fields = sync_name
