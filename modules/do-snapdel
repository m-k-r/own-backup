#!/bin/bash

list_snap_del=${current_snap_shots}
snap_del_number=${current_snap_number}

if [[ "${show_commands}" == "set" ]] && [[ -n "${current_server}" ]]; then
	show_commands_part1="ssh ${current_ssh} \""
	show_commands_part2="\""
fi

while [[ "${snap_del_number}" -gt "${current_snap_limit}" ]]
do	snap_del=$(echo "${list_snap_del}" | awk 'NR==1{print $0}')

	if [[ -n "${current_sync_vmid}" ]] && [[ "${current_side}" == "source" ]]; then
		snap_del_vm=$(echo "${snap_del}" | rev | cut -d "@" -f 1 | rev)
		if [[ -n "${current_server}" ]] && [[ ! "${show_commands}" == "set" ]]; then
			ssh ${current_ssh} "qm delsnapshot ${current_sync_vmid} ${snap_del_vm}";
		elif [[ ! -n "${current_server}" ]] && [[ ! "${show_commands}" == "set" ]]; then
			qm delsnapshot "${current_sync_vmid}" "${snap_del_vm}"; else
			echo "${show_commands_part1}qm delsnapshot ${current_sync_vmid} ${snap_del_vm}${show_commands_part2}"
		fi;

	elif [[ "${mode_snapshot}" == "zfs" ]]; then
		if [[ -n "${current_server}" ]] && [[ ! "${show_commands}" == "set" ]]; then
			ssh ${current_ssh} "zfs destroy ${snap_del}";
		elif [[ ! -n "${current_server}" ]] && [[ ! "${show_commands}" == "set" ]]; then
			zfs destroy "${snap_del}"; else
			echo "${show_commands_part1}zfs destroy ${snap_del}${show_commands_part2}"
		fi;

	elif [[ "${mode_snapshot}" == "btrfs" ]]; then
		if [[ -n "${current_server}" ]] && [[ ! "${show_commands}" == "set" ]]; then
			ssh ${current_ssh} "btrfs subvolume delete ${snap_del}";
		elif [[ ! -n "${current_server}" ]] && [[ ! "${show_commands}" == "set" ]]; then
			btrfs subvolume delete "${snap_del}"; else
			echo "${show_commands_part1}btrfs subvolume delete ${snap_del}${show_commands_part2}"
		fi;

	elif [[ "${mode_snapshot}" == "file" ]]; then
		if [[ -n "${current_server}" ]] && [[ ! "${show_commands}" == "set" ]]; then
			ssh ${current_ssh} "rm -rf ${snap_del}";
		elif [[ ! -n "${current_server}" ]] && [[ ! "${show_commands}" == "set" ]]; then
			rm -rf "${snap_del}"; else
			echo "${show_commands_part1}rm -rf ${snap_del}${show_commands_part2}"
		fi
	fi
	unset snap_del

	list_snap_del=$(echo "${list_snap_del}" | tail -n +2)
	snap_del_number=$((${snap_del_number} - 1))
done

##### variable list. these will be picked up by debug #####
# import_fields = mode_snapshot current_server current_ssh current_side current_snap_limit current_sync_vmid current_snap_shots current_snap_number
# export_fields =
