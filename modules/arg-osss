unset oss_parameter
current_side=source
export current_side

if [[ -n "${arg_output}" ]]; then
	oss_parameter+=" -o ${arg_output}"; else
	oss_parameter+=" -o previous"
fi

if [[ -n "${elem_server_source}" ]] && [[ ! "${snap_location_source}" == "ssh" ]]; then
	oss_parameter+=" -s ${elem_server_source}";
elif [[ ! -n "${elem_server_source}" ]] && [[ -n "${snap_location_source}" ]]; then
	oss_parameter+=" -s ${snap_location_remote_source}~${snap_location_source}"
fi

if [[ -n "${snap_list_source}" ]]; then
	oss_parameter+=" -c ${snap_list_source}"
	oss_parameter+=" -f ${snap_list_frequency_source}"
	oss_parameter+=" -l ${snap_date}"; else

	if [[ -n "${mode_override[aa]}" ]]; then
		oss_parameter+=" -m ${mode_override[aa]}"; else
		oss_parameter+=" -m ${mode_create}"
	fi

	oss_parameter+=" -l ${snap_string}"
	oss_parameter+=" -n $(echo ${snap_set_source[aa]}${snap_file_type[aa]} | tr ' ' '~')"

	if [[ -n "${sync_vmid[aa]}" ]]; then
		oss_parameter+=" -r ${sync_vmid[aa]}"; else
		oss_parameter+=" -r $(echo ${snap_root_source[aa]} | tr ' ' '~')"
	fi

	if [[ -n "${elem_options_sql}" ]]; then
		oss_parameter+=" -q ${elem_options_sql}"
	fi

	if [[ ! -z "${elem_certificate}" ]]; then
		oss_parameter+=" -z ${elem_certificate}"
	fi
fi
