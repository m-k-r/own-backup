unset arg_oss_source

if [ -n "${output}" ]
	then	arg_oss_source+=" -o ${output}"
	else	arg_oss_source+=" -o previous"
fi

if [ -n "${config_server_source}" ] && [ ! "${snap_location_source}" == "ssh" ]
	then	arg_oss_source+=" -s ${config_server_source}"
	elif [ ! -n "${config_server_source}" ] && [ -n "${snap_location_source}" ]
		then	arg_oss_source+=" -s ${snap_location_remote_source}~${snap_location_source}"
fi

if [ -n "${snap_list_source}" ]
	then	arg_oss_source+=" -c ${snap_list_source}"
		arg_oss_source+=" -f ${snap_list_frequency_source}"
		arg_oss_source+=" -l ${snap_date}"

	else	if [ -n "${mode_override[aa]}" ]
			then	arg_oss_source+=" -m ${mode_override[aa]}"
			else	arg_oss_source+=" -m ${mode_create}"
		fi

		arg_oss_source+=" -l ${snap_string}"
		arg_oss_source+=" -n $(echo ${snap_set_source[aa]}${snap_file_type[aa]} | tr ' ' '~')"

		if [ -n "${sync_vmid[aa]}" ]
			then	arg_oss_source+=" -r ${sync_vmid[aa]}"
			else	arg_oss_source+=" -r $(echo ${snap_root_source[aa]} | tr ' ' '~')"
		fi

		if [ -n "${config_options_sql}" ]
			then	arg_oss_source+=" -q ${config_options_sql}"
		fi

		if [ ! -z "${config_certificate}" ]
			then	arg_oss_source+=" -z ${config_certificate}"
		fi
fi
