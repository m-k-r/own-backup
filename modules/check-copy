#!/bin/bash

# check if all prerequisits for rsync are met
if [[ ! "${mode_snapshot}" == "file" ]]; then
	# not yet implemented
	#if [ "${current_snap_limit}" -gt "0" ] || [ -n "${current_snap_list}" ]
	#	then	probe_snap_rsync=${current_path_snap}${current_path_offset}
	#	else	probe_snap_rsync=${current_path_root}${current_path_offset}
	#fi

	if [[ "${current_side}" == "source" ]]; then
		probe_snap_rsync=$(echo "${current_path_root}${current_path_offset}/${current_sync_name_source}" | sed 's/\\ / /g'); else
		probe_snap_rsync=$(echo "${current_path_root}${current_path_offset}" | sed 's/\\ / /g')
	fi

	# check if directory exists
	if [[ -n "${current_server}" ]]; then
		probe=$(ssh ${current_ssh} "find \"${probe_snap_rsync}\" -maxdepth 0 2> /dev/null"); else
		probe=$(find "${probe_snap_rsync}" -maxdepth 0 2> /dev/null)
	fi

	if [[ "${probe}" == "${probe_snap_rsync}" ]]; then
		snap_rsync=${probe_snap_rsync}; else
		exit 81
	fi;

elif [[ "${mode_snapshot}" == "file" ]]; then
	if [[ "${current_side}" == "source" ]] && [[ "${current_snap_limit}" == "0" ]]; then
		snap_rsync=${current_path_root}${current_path_offset}/${current_sync_name_source};
	elif [[ "${current_side}" == "target" ]]; then
		snap_rsync=${current_path_root}${current_path_offset}
	fi; else
	:
fi

echo "${snap_rsync}"

##### variable list. these will be picked up by debug #####
# import_fields = current_side mode_snapshot current_server current_ssh current_snap_limit current_snap_list current_path_root current_path_snap current_path_offset current_sync_name_source
# export_fields = snap_rsync
