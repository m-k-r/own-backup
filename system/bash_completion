_own-backup() {
	local cur prev list dir_conf offset dir_current file_type file_element snap_limit_source snap_limit_target
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"

	# define variables
	dir_conf=/etc/own-backup
	offset=5
	if [[ -n "$(echo ${COMP_WORDS[@]} | grep '\-d' | egrep -v 'create')" ]]; then
		dir_current=${dir_conf}/debug/
		file_type=dump ;
	elif [[ "${prev}" == "-j" ]]; then
		dir_current=${dir_conf}/job/
		file_type=job; else
		dir_current=${dir_conf}/backup/
		file_type=bak
	fi

	# define functions
	__get_element_name() {
		file_element=${dir_current}${COMP_WORDS[$(echo ${COMP_WORDS[@]} | awk -v name='-e' '{for (i=1;i<=NF;i++) if ($i==name) print i; exit}')]}.bak
		if [ ! -f "${file_element}" ]; then
			unset file_element
		fi
	}

	case "${prev}" in
		-c)	list="initial upgrade"
			;;
		-d)	list="check create export import show"
			;;
		-e)	list=$(find ${dir_current} | grep "\.${file_type}" | cut -d "/" -f ${offset}- | rev | cut -d "." -f 2- | rev)
			;;
		-f)	if [[ -n "$(echo ${COMP_WORDS[@]} | grep '\-e')" ]]; then
				__get_element_name
				list="$(awk -v condition1='snapshotlist' -v condition2='(source)' '$1 == condition1 && $2 == condition2 { print $5 }' ${file_element}) $(awk -v condition1='snapshotlist' -v condition2='(target)' '$1 == condition1 && $2 == condition2 { print $5 }' ${file_element})"
			fi
			;;
		-g)	if [[ -n "$(echo ${COMP_WORDS[@]} | grep '\-e')" ]]; then
				__get_element_name

				if [[ "$(awk -v condition1='filesystem' '$1 == condition1 { print $3 }' ${file_element})" == "zfs" ]]; then
					list=$(zfs list | awk '{ print $1 }' | tail -n +2); else
					list=$(awk -v condition1="snapshot-path" -v condition2="(target)" '$1 == condition1 && $2 == condition2 { print $4 }' ${file_element})
				fi
			fi
			;;
		-j)	list=$(find ${dir_current} | grep "\.${file_type}" | cut -d "/" -f ${offset}- | rev | cut -d "." -f 2- | rev)
			;;
		-m)	if [[ -n "$(echo ${COMP_WORDS[@]} | grep '\-e')" ]]; then
				__get_element_name
				list="all $(awk -v condition1='snapshotformat' -v condition2='(name)' '$1 == condition1 && $2 == condition2 { print $4 }' ${file_element})  $(date +$(awk -v condition1='snapshotformat' -v condition2='(date)' '$1 == condition1 && $2 == condition2 { print $4 }' ${file_element}))"
			fi
			;;
		-n)	if [[ -n "$(echo ${COMP_WORDS[@]} | grep '\-e')" ]]; then
				__get_element_name
				snap_limit_source=$(awk -v condition1="snapshotnumber" -v condition2="(source)" '$1 == condition1 && $2 == condition2 { print $4 }' ${file_element})
				snap_limit_target=$(awk -v condition1="snapshotnumber" -v condition2="(target)" '$1 == condition1 && $2 == condition2 { print $4 }' ${file_element})

				if [[ ! -n "${snap_limit_source}" ]]; then
					snap_limit_source=0
				fi

				if [[ ! -n "${snap_limit_target}" ]]; then
					snap_limit_target=0
				fi

				list="${snap_limit_source}:${snap_limit_target}"
			fi
			;;
		-o)
			list="commands datasets full progress snapshots snapvars"
			;;
		-s)	if [[ -n "$(echo ${COMP_WORDS[@]} | grep '\-e')" ]]; then
				__get_element_name
				list=$(awk -v condition1="snapshotformat" -v condition2="(name)" '$1 == condition1 && $2 == condition2 { print $4 }' ${file_element})
			fi
			;;
		-t)	if [[ -n "$(echo ${COMP_WORDS[@]} | grep '\-d' | egrep -v 'create')" ]]; then
				list="deb git"; else
				if [[ -n "$(echo ${COMP_WORDS[@]} | grep '\-e')" ]]; then
					__get_element_name
					list=$(date +$(awk -v condition1="snapshotformat" -v condition2="(date)" '$1 == condition1 && $2 == condition2 { print $4 }' ${file_element}))
				fi
			fi
			;;
		*)	list="-c -d -e -f -g -j -m -n -o -r -s -t -v -h"
			;;
	esac

	COMPREPLY=( $(compgen -W "${list}" -- ${cur}) )
	return 0
}
complete -F _own-backup own-backup
